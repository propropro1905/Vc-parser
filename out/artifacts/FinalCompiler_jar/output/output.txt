ID double
ID addNumber
LPAREN (
ID double
ID num1
COMMA ,
ID double
ID num2
RPAREN )
LBRACE {
RETURN return
ID num1
PLUS +
ID num2
SEMICOLON ;
RBRACE }
INT int
ID fibonacci
LPAREN (
INT int
ID num
RPAREN )
LBRACE {
ID fibonacci
LPAREN (
INTLITERAL 0
RPAREN )
EQ =
INTLITERAL 0
SEMICOLON ;
ID fibonacci
LPAREN (
INTLITERAL 1
RPAREN )
EQ =
INTLITERAL 1
SEMICOLON ;
RETURN return
ID fibonacci
LPAREN (
ID num
MINUS -
INTLITERAL 1
RPAREN )
PLUS +
ID fibonacci
LPAREN (
ID num
MINUS -
INTLITERAL 2
RPAREN )
SEMICOLON ;
RBRACE }
INT int
ID main
LPAREN (
RPAREN )
LBRACE {
ID double
ID a
EQ =
FLOATLITERAL 2.235
SEMICOLON ;
ID double
ID b
EQ =
FLOATLITERAL 5.1982
SEMICOLON ;
ID double
ID sum
EQ =
ID addNumber
LPAREN (
ID a
COMMA ,
ID b
RPAREN )
SEMICOLON ;
ID putDoubleLn
LPAREN (
ID sum
RPAREN )
SEMICOLON ;
INT int
ID n
EQ =
INTLITERAL 2
SEMICOLON ;
INT int
ID fibo
EQ =
ID fibonacci
LPAREN (
ID n
RPAREN )
SEMICOLON ;
ID putIntLn
LPAREN (
ID n
RPAREN )
ID putStringLn
LPAREN (
STRINGLITERAL "
RPAREN )
SEMICOLON ;
WHILE while
LPAREN (
ID n
LT <
INTLITERAL 5
RPAREN )
LBRACE {
ID putIntLn
LPAREN (
ID fibonacci
LPAREN (
ID n
RPAREN )
RPAREN )
SEMICOLON ;
RBRACE }
RBRACE }
